import classNames from "classnames"
import { Icon } from "react-onsenui"
import { generateQRCode } from "@/magic/qrcode"
import { ORDER_PAYMENT } from "@/config/payment"
import RemoveButton from "./RemoveButton"
import util from "@/magic/util"

export default ({ Config, setting, payment, card, onAddClick, onRemoveClick, onFreezeClick }) => {
  const disabledColor = "#CACACA"
  const Buttons = () => (
    <>
      <RemoveButton setting={setting} onClick={() => onRemoveClick && onRemoveClick(card)} />

      {payment.UserLock && (
        <div>
          <div
            className={classNames(`flex items-center px-[0.2rem] rounded-l-full rounded-r-full text-[15px] ml-[0.125rem]`, "bg-gray-50")}
            style={{
              color: card.disabled ? disabledColor : setting.color.primary,
            }}
            onClick={() => {
              !card.disabled && onFreezeClick(card)
            }}
          >
            <svg className="w-[16px] mr-[0.125rem]" viewBox="0 0 10 12" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path
                d="M9.57994 8.065L8.57994 7.49L9.02493 7.37C9.09029 7.35477 9.15191 7.32655 9.20612 7.28701C9.26034 7.24746 9.30604 7.19741 9.3405 7.13983C9.37497 7.08226 9.39749 7.01833 9.40672 6.95187C9.41596 6.8854 9.41173 6.81776 9.39427 6.75296C9.37681 6.68817 9.34649 6.62756 9.30511 6.57473C9.26373 6.5219 9.21215 6.47794 9.15342 6.44547C9.0947 6.413 9.03004 6.39269 8.96329 6.38573C8.89655 6.37878 8.82909 6.38533 8.76494 6.405L7.35493 6.785L5.99993 6L7.35493 5.215L8.76494 5.595H8.89494C9.02754 5.61224 9.16157 5.57609 9.26753 5.49452C9.37348 5.41294 9.4427 5.29261 9.45994 5.16C9.47717 5.02739 9.44103 4.89337 9.35945 4.78741C9.27787 4.68145 9.15754 4.61224 9.02493 4.595L8.57994 4.5L9.57994 3.925C9.63706 3.89217 9.68716 3.84841 9.72737 3.79622C9.76758 3.74402 9.79712 3.68442 9.8143 3.62081C9.83148 3.55721 9.83596 3.49084 9.82749 3.4255C9.81902 3.36016 9.79777 3.29713 9.76494 3.24C9.73211 3.18287 9.68834 3.13278 9.63615 3.09256C9.58396 3.05235 9.52436 3.02281 9.46075 3.00563C9.39714 2.98845 9.33077 2.98397 9.26543 2.99244C9.20009 3.00091 9.13706 3.02217 9.07994 3.055L7.99993 3.685L8.14993 3.13C8.1696 3.06584 8.17616 2.99838 8.1692 2.93164C8.16225 2.8649 8.14193 2.80024 8.10946 2.74151C8.07699 2.68279 8.03303 2.6312 7.98021 2.58982C7.92738 2.54845 7.86676 2.51812 7.80197 2.50067C7.73718 2.48321 7.66953 2.47897 7.60307 2.48821C7.5366 2.49745 7.47268 2.51997 7.4151 2.55443C7.35752 2.5889 7.30747 2.6346 7.26793 2.68881C7.22839 2.74303 7.20016 2.80465 7.18494 2.87L6.77493 4.37L5.49993 5.135V3.57L6.53493 2.535C6.62806 2.44132 6.68033 2.31459 6.68033 2.1825C6.68033 2.05041 6.62806 1.92368 6.53493 1.83C6.48845 1.78314 6.43315 1.74594 6.37222 1.72055C6.31129 1.69517 6.24594 1.6821 6.17993 1.6821C6.11393 1.6821 6.04858 1.69517 5.98765 1.72055C5.92672 1.74594 5.87142 1.78314 5.82493 1.83L5.49993 2.155V1C5.49993 0.867392 5.44726 0.740215 5.35349 0.646447C5.25972 0.552678 5.13254 0.5 4.99993 0.5C4.86733 0.5 4.74015 0.552678 4.64638 0.646447C4.55261 0.740215 4.49993 0.867392 4.49993 1V2.235L4.09493 1.83C4.04845 1.78314 3.99315 1.74594 3.93222 1.72055C3.87129 1.69517 3.80594 1.6821 3.73993 1.6821C3.67393 1.6821 3.60858 1.69517 3.54765 1.72055C3.48672 1.74594 3.43142 1.78314 3.38494 1.83C3.29181 1.92368 3.23954 2.05041 3.23954 2.1825C3.23954 2.31459 3.29181 2.44132 3.38494 2.535L4.49993 3.65V5.15L3.21494 4.39L2.80493 2.89C2.78971 2.82465 2.76148 2.76303 2.72194 2.70881C2.6824 2.6546 2.63235 2.6089 2.57477 2.57443C2.51719 2.53997 2.45327 2.51745 2.3868 2.50821C2.32034 2.49897 2.25269 2.50321 2.1879 2.52067C2.12311 2.53812 2.06249 2.56845 2.00966 2.60982C1.95683 2.6512 1.91288 2.70279 1.88041 2.76151C1.84794 2.82024 1.82762 2.8849 1.82067 2.95164C1.81371 3.01838 1.82027 3.08584 1.83993 3.15L1.99993 3.685L0.919935 3.065C0.86281 3.03217 0.799778 3.01091 0.734437 3.00244C0.669097 2.99397 0.602728 2.99845 0.53912 3.01563C0.475512 3.03281 0.41591 3.06235 0.363718 3.10256C0.311526 3.14278 0.267765 3.19287 0.234935 3.25C0.202104 3.30713 0.180847 3.37016 0.172377 3.4355C0.163906 3.50084 0.168388 3.56721 0.185567 3.63081C0.220261 3.75928 0.304566 3.8687 0.419935 3.935L1.41993 4.5L0.999935 4.63C0.867327 4.64724 0.746998 4.71645 0.66542 4.82241C0.583841 4.92837 0.547696 5.06239 0.564935 5.195C0.582174 5.32761 0.651385 5.44794 0.757343 5.52952C0.863301 5.61109 0.997327 5.64724 1.12994 5.63H1.25993L2.66993 5.25L3.99993 6L2.64493 6.785L1.23493 6.405C1.16878 6.38043 1.09817 6.37015 1.02775 6.37483C0.95733 6.37951 0.8887 6.39904 0.826371 6.43214C0.764042 6.46524 0.709427 6.51116 0.666116 6.56688C0.622806 6.6226 0.591781 6.68686 0.575083 6.75542C0.558385 6.82399 0.556391 6.89532 0.569234 6.96472C0.582076 7.03411 0.609463 7.1 0.649594 7.15805C0.689725 7.2161 0.741691 7.265 0.802074 7.30153C0.862456 7.33806 0.929888 7.3614 0.999935 7.37L1.44493 7.49L0.444935 8.065C0.329566 8.1313 0.245261 8.24072 0.210567 8.36919C0.175873 8.49765 0.193631 8.63463 0.259935 8.75C0.326239 8.86537 0.435658 8.94967 0.56412 8.98437C0.692583 9.01906 0.829566 9.0013 0.944935 8.935L1.99993 8.315L1.84993 8.87C1.83011 8.934 1.82336 9.00134 1.83007 9.068C1.83678 9.13467 1.85683 9.1993 1.88901 9.25807C1.92119 9.31683 1.96486 9.36853 2.01741 9.41009C2.06996 9.45165 2.13033 9.48223 2.19493 9.5C2.23813 9.50491 2.28174 9.50491 2.32493 9.5C2.43782 9.50387 2.54868 9.4694 2.63947 9.40221C2.73027 9.33503 2.79563 9.23908 2.82493 9.13L3.23494 7.63L4.49993 6.865V8.43L3.46494 9.465C3.37181 9.55868 3.31954 9.68541 3.31954 9.8175C3.31954 9.94959 3.37181 10.0763 3.46494 10.17C3.51124 10.2172 3.56646 10.2548 3.6274 10.2806C3.68834 10.3063 3.75378 10.3197 3.81994 10.32C3.88609 10.3197 3.95153 10.3063 4.01247 10.2806C4.07341 10.2548 4.12863 10.2172 4.17493 10.17L4.49993 9.845V11C4.49993 11.1326 4.55261 11.2598 4.64638 11.3536C4.74015 11.4473 4.86733 11.5 4.99993 11.5C5.13254 11.5 5.25972 11.4473 5.35349 11.3536C5.44726 11.2598 5.49993 11.1326 5.49993 11V9.765L5.90493 10.17C5.95142 10.2169 6.00672 10.2541 6.06765 10.2794C6.12858 10.3048 6.19393 10.3179 6.25993 10.3179C6.32594 10.3179 6.39129 10.3048 6.45222 10.2794C6.51315 10.2541 6.56845 10.2169 6.61493 10.17C6.70806 10.0763 6.76033 9.94959 6.76033 9.8175C6.76033 9.68541 6.70806 9.55868 6.61493 9.465L5.49993 8.35V6.85L6.78493 7.595L7.19493 9.095C7.22423 9.20408 7.2896 9.30003 7.3804 9.36721C7.47119 9.4344 7.58205 9.46887 7.69493 9.465C7.73813 9.46991 7.78174 9.46991 7.82493 9.465C7.88877 9.44818 7.94865 9.41888 8.00111 9.3788C8.05357 9.33872 8.09757 9.28864 8.13057 9.23147C8.16358 9.17429 8.18493 9.11114 8.1934 9.04567C8.20188 8.9802 8.1973 8.91369 8.17994 8.85L7.99993 8.315L9.06993 8.935C9.12706 8.96783 9.19009 8.98909 9.25543 8.99756C9.32077 9.00603 9.38714 9.00155 9.45075 8.98437C9.51436 8.96719 9.57396 8.93765 9.62615 8.89744C9.67834 8.85722 9.72211 8.80713 9.75494 8.75C9.78777 8.69287 9.80902 8.62984 9.81749 8.5645C9.82596 8.49916 9.82148 8.43279 9.8043 8.36919C9.78712 8.30558 9.75758 8.24598 9.71737 8.19378C9.67716 8.14159 9.62706 8.09783 9.56993 8.065H9.57994Z"
                fill={card.disabled ? disabledColor : setting.color.primary}
              />
            </svg>
            冻结
          </div>
        </div>
      )}
    </>
  )

  const textAccount =
    payment.CType === ORDER_PAYMENT.ALIPAY.C_TYPE && !!card && card?.Bank === ORDER_PAYMENT.ALIPAY.NAME3
      ? {
          name: card?.Bank || payment.Name,
          account: util.getUrlParam("account", card.Account),
          show: true,
        }
      : { show: false }
  return card ? (
    <div className="bankcard rounded-sm bg-gray-50 mb-1">
      <div className={classNames("flex rounded-t-sm p-1 ")} style={{ backgroundColor: setting.color.primary }}>
        <img width="20%" src={setting.image.icon} />
        <div className="flex-1 pl-1 text-gray-50  grid">
          <div className="flex-1 flex">
            <div className="flex-1 flex items-center text-[15px] md:text-[20px]">
              {!textAccount.show ? (
                payment.Name
              ) : (
                <div class="h-full flex flex-col justify-between flex-1">
                  <div class="flex items-center justify-between">
                    {textAccount.name}
                    <div class="flex">
                      <Buttons />
                    </div>
                  </div>
                  <div>{textAccount.account}</div>
                </div>
              )}
            </div>
            {!textAccount.show && <Buttons />}
          </div>
        </div>
      </div>

      <div className="flex p-1">
        <div className="qrcode flex-1 flex justify-end">
          <div className="content" dangerouslySetInnerHTML={{ __html: generateQRCode(card.Account) }}></div>
        </div>

        <div className={classNames("pl-1 py-1 flex-1 flex　flex-col")}>
          <div className="flex-1 flex items-center">
            <Icon icon="ion-android-person" className="text-gray-400 text-2 mr-0.5" />
            <span className="mr-0.5 text-[14px] md:text-[20px]">收款姓名</span>
            <span className="text-[14px] md:text-[20px] font-bold">{card.Name}</span>
          </div>
          <div className="flex-1 flex items-center">
            <Icon icon="ion-ios-paper" className="text-gray-400 text-2 mr-0.5" />
            <span className="mr-0.5 text-[14px] md:text-[20px]">账户状态</span>
            <span className="text-[14px] md:text-[20px] font-bold">{card.StatusText}</span>
          </div>
        </div>
      </div>
    </div>
  ) : (
    <div className="bankcard bg-gray-50 rounded-sm p-1 flex items-center" onClick={onAddClick}>
      <Icon icon="ion-android-add-circle" className="text-gray-400 text-sm mr-1" />
      <span className="text-[17px]">新增{payment.Name}</span>
    </div>
  )
}
